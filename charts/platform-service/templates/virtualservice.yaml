{{- if not .Values.deploymentOnly -}}
{{- if .Values.defaultRouting.enabled}}
{{- $fullName := include "platform-service.fullname" . -}}
{{- $app := .Values.app }}
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{ include "platform-service.serviceName" . }}
spec:
  hosts:
  - {{ include "platform-service.serviceName" . }}
  gateways:
  - mesh
  http:
  - name: "{{ $app }}-internal-route"
    route:
{{ include "virtualservice.destination" . | indent 6 }}
{{ include "virtualservice.handleRetries" . }}

{{- if .Values.gateway.exposeService }}
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{ include "platform-service.serviceName" . }}-external
spec:
  hosts:
{{- if .Values.defaultRouting.allHosts }}
  - "*"
{{- else }}
  {{- range .Values.defaultRouting.hosts }}
  - {{ . | quote }}
  {{- end }}
  {{- /* Also include deprecatedHosts so we can redirect traffic */ -}}
  {{- range .Values.defaultRouting.deprecatedHostsToRedirect }}
  - {{ . | quote }}
  {{- end }}
{{- end }}
  gateways:
  - {{ required "A valid .Values.gateway.name entry required!" .Values.gateway.name }}
{{- $prefixes := default (list .Values.app) .Values.defaultRouting.urlPrefixes }}
  http:
{{- if .Values.defaultRouting.deprecatedHostsToRedirect}}
  # redirect deprecated host routes
{{- $newHost := .Values.defaultRouting.hosts | first | quote }}
  - name: "{{ $app }}-redirect-deprecated-host-routes"
    match:
{{- range .Values.defaultRouting.deprecatedHostsToRedirect}}
      - authority:
          exact: {{ . | quote }}
{{- end }}
    redirect:
      authority: {{ $newHost }}
{{- end }}
{{- if .Values.defaultRouting.urlExactMatches }}
  - name: "{{ $app }}-exact-match-routes"
    match:
  {{- range .Values.defaultRouting.urlExactMatches }}
  {{- include "virtualservice.guardAgainstLeadingSlashInMatch" . }}
  {{- $slashMatch := printf "/%s" . }}
    - uri:
        exact: {{ $slashMatch }}
    - uri:
        prefix: {{ $slashMatch }}/
  {{- end }}
{{ include "virtualservice.route" .  | indent 4 }}
{{- end }}

{{- if .Values.defaultRouting.redirectOnNoTrailingSlash }}
  # redirect on prefixes without trailing slashes
  {{- range $prefixes }}
  {{- $slashPrefix := printf "/%s" . }}
  - name: "{{ $app }}-noslash-{{ . }}-route"
    match:
    - uri:
        exact: {{ $slashPrefix }}
    redirect:
      uri: {{ $slashPrefix }}/
  {{- end}}
{{- end}}
  {{- if not .Values.defaultRouting.catchAll }}
  - name: "{{ $app }}-prefix-match-routes"
    match:
    {{- range $prefixes }}
    {{- include "virtualservice.guardAgainstLeadingSlashInMatch" . }}
    {{- $slashPrefix := printf "/%s" . }}
    - uri:
        prefix: {{ $slashPrefix }}/
    {{- end }}
  {{- else }}
  - name: "{{ $app }}-call-all-route"
  {{- end }}
{{ include "virtualservice.route" . | indent 4 }}

{{- if .Values.defaultRouting.rewriteUrlPrefix.enabled }}
    rewrite:
      uri: {{ required "rewriteUri is required" .Values.defaultRouting.rewriteUrlPrefix.replaceWith }}
{{- end}}
    # deprecated
    headers:
      request:
        add:
          x-appname: {{ first $prefixes }}
{{- include "virtualservice.handleRetries" . }}
{{- end}}
{{- end}}
{{- end}}
